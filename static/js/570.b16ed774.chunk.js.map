{"version":3,"file":"static/js/570.b16ed774.chunk.js","mappings":"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","sources":["components/atoms/Button/index.tsx","components/atoms/Div/index.tsx","components/atoms/H1/index.tsx","components/atoms/Input/Input.tsx","components/atoms/Main/index.tsx","constants/users.ts","components/templates/Login/index.tsx","components/atoms/Span/index.tsx","pages/Main/Main.types.ts","config/firebase.tsx","components/templates/Register/Register.functions.ts","components/templates/Register/index.tsx","pages/Main/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { IButton } from './Button.types';\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @param {Function} onClick - custom function to the onClick Prop Button\n * @param {string | number | boolean | object} onClickValue - value to pass to the onClick function\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Button({\n  children,\n  customClassNames,\n  onClick,\n  onClickValue,\n  isDisabled,\n  type\n}: IButton): JSX.Element {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <button\n      type={type ?? 'button'}\n      className={classNames(customClassNames)}\n      onClick={() => onClick(onClickValue)}\n      disabled={isDisabled}>\n      {children}\n    </button>\n  );\n}\n","import classNames from 'classnames';\nimport { IDiv } from './Div.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Div({ children, customClassNames }: IDiv) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <div className={classNames(customClassNames)}>{children}</div>;\n}\n","import classNames from 'classnames';\nimport { IH1 } from './H1.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function ASide({ children, customClassNames }: IH1) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <h1 className={classNames(customClassNames)}>{children}</h1>;\n}\n","import classNames from 'classnames';\nimport { IInput } from './Input.types';\n\n/**\n * @param {string | undefined} src - string that uses to render image\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @param {string} alt - string display when image not load correctly or complete\n * @returns JSX/HTML Element\n */\nexport default function Input({\n  name,\n  customClassNames,\n  type,\n  onChange,\n  max,\n  min,\n  placeholder\n}: IInput): JSX.Element {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <input\n      name={name}\n      type={type}\n      max={max}\n      min={min}\n      className={classNames(customClassNames)}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n}\n","import classNames from 'classnames';\nimport { IMain } from './Main.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent t\n */\n\nexport default function Main({ children, customClassNames }: IMain) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <main className={classNames(customClassNames)}>{children}</main>;\n}\n","export const users = [\n    {\n        UserName: 'User01',\n        Password: 'smurdj'\n    },\n    {\n        UserName: 'User02',\n        Password: 'qfqwxt'\n    },\n    {\n        UserName: 'User03',\n        Password: 'ebamqx'\n    },\n    {\n        UserName: 'User04',\n        Password: 'ppyexj'\n    },\n    {\n        UserName: 'User05',\n        Password: 'hcstxd'\n    },\n    {\n        UserName: 'User06',\n        Password: 'fdrqwj'\n    },\n    {\n        UserName: 'User07',\n        Password: 'tdtxmq'\n    },\n    {\n        UserName: 'User08',\n        Password: 'mqnnyp'\n    },\n    {\n        UserName: 'User09',\n        Password: 'bdvjwe'\n    },\n    {\n        UserName: 'User10',\n        Password: 'ndkpwk'\n    },\n    {\n        UserName: 'User11',\n        Password: 'tyszbg'\n    },\n    {\n        UserName: 'User12',\n        Password: 'duurxy'\n    },\n    {\n        UserName: 'User13',\n        Password: 'wrabsb'\n    },\n    {\n        UserName: 'User14',\n        Password: 'afhfyr'\n    },\n    {\n        UserName: 'User15',\n        Password: 'fksbqv'\n    },\n]","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Button from \"../../atoms/Button\";\nimport Div from \"../../atoms/Div\";\nimport H1 from \"../../atoms/H1\";\nimport Input from \"../../atoms/Input/Input\";\nimport Main from \"../../atoms/Main\";\nimport { ILogin } from './Login.types';\nimport { users } from '../../../constants/users';\n\nexport default function Login({ setState }: ILogin) {\n  // --- Hooks -----------------------------------------------------------------\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Required'),\n    password: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n  })\n  const formik = useFormik({\n    initialValues: { username: '', password: '' },\n    onSubmit: (values) => {\n      let compare = users.find((v) => {return v.UserName === values.username && v.Password === values.password});\n      if(compare !== undefined) setTimeout(() => {setState(1)}, 3000);\n    },\n    validationSchema,\n  });\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <>\n    <Main customClassNames=\"bg-desktop h-screen flex flex-1 justify-center items-center\">\n      <form onSubmit={formik.handleSubmit} className=\"bg-white w-4/5 lg:w-2/5 h-3/5 lg:h-4/5 lg:p-5 flex flex-col items-center gap-10 justify-center\">\n        <H1 customClassNames=\"text-3xl\">Inicio de Sesión</H1>\n        <Div customClassNames=\"flex flex-col w-full px-5 gap-10 justify-center items-center\">\n          <Input\n            id='username'\n            name=\"username\"\n            type=\"text\"\n            value={formik.values.username}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            customClassNames=\"w-full rounded-xl bg-gray-200 p-2 lg:p-5 text-lg\"\n            placeholder=\"Usuario\"\n          />\n          <Input\n            id='password'\n            name=\"password\"\n            type=\"password\"\n            value={formik.values.password}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            customClassNames=\"w-full rounded-xl bg-gray-200 p-2 lg:p-5 text-lg\"\n            placeholder=\"Contraseña\"\n          />\n          <Button\n            onClick={() => { }}\n            onClickValue={true}\n            customClassNames=\"bg-medium-turquoise p-4 w-full lg:w-96 rounded-lg text-white text-lg\"\n            type='submit'\n          >\n            Ingresar\n          </Button>\n        </Div>\n      </form>\n    </Main>\n  </>\n}","import classNames from 'classnames';\nimport { ISpan } from './Span.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Span({ children, customClassNames }: ISpan) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <span className={classNames(customClassNames)}>{children}</span>;\n}\n","export enum EState {\n  Login = 0,\n  Register = 1\n}","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDlszimD_kJl3gvig5Kp9-sA-Iq7vapQ6U\",\n  authDomain: \"ticketscann.firebaseapp.com\",\n  projectId: \"ticketscann\",\n  storageBucket: \"ticketscann.appspot.com\",\n  messagingSenderId: \"425710992126\",\n  appId: \"1:425710992126:web:476972027670f4bdeb43af\",\n  measurementId: \"G-LT0B306Y3B\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const firestore = getFirestore(app);\nexport const analytics = getAnalytics(app);","import emailjs from \"@emailjs/browser\";\n\nexport const sendEmail = (to_name: string, to_email: string, id: string) => {\n  const templateParams = {\n    to_name,\n    to_email,\n    qr:\n      \"https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=\" +\n      id,\n  };\n  console.log('template: ', templateParams);\n  // serviceId, templateId, templateParams, publicKey\n  emailjs\n    .send(\n      /* \"service_5cted8p\",\n      \"template_ri8cnoo\",\n      templateParams,\n      \"cgmGhlqI_1tJf45Y3\" */\n      \"service_upkefmm\",\n      \"template_4ss2fi3\",\n      templateParams,\n      \"QjnxgCCvyTuw_xzgr\" \n    )\n    .then(\n      (res) => {\n        console.log(\"respuesta de emailJs: \", res);\n      },\n      (err) => {\n        console.log(\"error de emailJs: \", err);\n      }\n    );\n};","import {\n  collection,\n  addDoc,\n  query,\n  where,\n  onSnapshot,\n} from \"firebase/firestore\";\nimport toastNotify from 'react-hot-toast';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Button from \"../../atoms/Button\";\nimport Div from \"../../atoms/Div\";\nimport H1 from \"../../atoms/H1\";\nimport Input from \"../../atoms/Input/Input\";\nimport Main from \"../../atoms/Main\";\nimport Span from \"../../atoms/Span\";\n\nimport { firestore } from \"../../../config/firebase\";\nimport { sendEmail } from \"./Register.functions\";\n\nexport default function Register() {\n  // --- Hooks -----------------------------------------------------------------\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\"),\n    id: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n  const formik = useFormik({\n    initialValues: { name: \"\", email: \"\", id: \"\" },\n    onSubmit: async (values,  { setValues, resetForm }) => {\n      const q = query( collection(firestore, \"Registers\"), where(\"id\", \"==\", values.id) );\n      const unsubscribe = onSnapshot(\n        q,\n        async (querySnapshot) => {\n          if (querySnapshot.size === 0) {\n            await addDoc(collection(firestore, \"Registers\"), {\n              name: values.name,\n              email: values.email,\n              id: values.id,\n              donative: true,\n              attendance: false,\n            }).then((e) => {\n              unsubscribe();\n              toastNotify.success('Datos registrado Exitosamente!');\n              sendEmail(values.name, values.email, values.id);\n              setValues({ name: '', email: '', id: '' });\n              resetForm({values: { name: '', email: '', id: '' } })\n            });\n          } else return;\n        },\n        (err) => {\n          console.log(\"error: \", err);\n        }\n      );\n    },\n    validationSchema,\n  });\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <>\n      <Main customClassNames=\"bg-desktop h-screen flex flex-1 justify-center items-center\">\n        <form\n          onSubmit={formik.handleSubmit}\n          className=\"bg-white w-4/5 lg:w-2/5 h-4/5 p-5 flex flex-col justify-center items-center gap-5\"\n        >\n          <H1 customClassNames=\"text-2xl\">Formato de Registro</H1>\n          <Div customClassNames=\"flex flex-col flex-1 w-full px-5 gap-5 justify-center\">\n            <Span>Nombre</Span>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              value={formik.values.name}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              customClassNames=\"w-full border-b-2 border-black\"\n            />\n            <Span>Correo Electronico</Span>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              value={formik.values.email}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              customClassNames=\"w-full border-b-2 border-black\"\n            />\n            <Span>Documento de Identidad</Span>\n            <Input\n              id=\"id\"\n              name=\"id\"\n              type=\"text\"\n              value={formik.values.id}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              customClassNames=\"w-full border-b-2 border-black\"\n            />\n            <Span>Tipo de Donativo</Span>\n          </Div>\n          <Button\n            onClick={() => {}}\n            onClickValue={true}\n            customClassNames=\"bg-medium-turquoise p-4 w-full lg:w-96 rounded-lg text-white text-lg\"\n            type=\"submit\"\n          >\n            Registrar\n          </Button>\n        </form>\n      </Main>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport Login from '../../components/templates/Login';\nimport Register from '../../components/templates/Register';\nimport { EState } from './Main.types';\n\nexport default function Main() {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  const [state, setState] = useState(EState.Login)\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------  \n  // --- END: Data and handlers ------------------------------------------------\n  return <>\n    {state === EState.Login ? <Login setState={setState}/> : <Register />}\n  </>\n}"],"names":["Button","children","customClassNames","onClick","onClickValue","isDisabled","type","className","classNames","disabled","Div","ASide","Input","name","onChange","max","min","placeholder","Main","users","UserName","Password","Login","setState","validationSchema","Yup","shape","username","required","password","formik","useFormik","initialValues","onSubmit","values","undefined","find","v","setTimeout","handleSubmit","id","value","onBlur","handleBlur","handleChange","Span","EState","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","getAnalytics","sendEmail","to_name","to_email","templateParams","qr","console","log","emailjs","then","res","err","Register","email","setValues","resetForm","q","query","collection","where","unsubscribe","onSnapshot","querySnapshot","size","addDoc","donative","attendance","e","toastNotify","useState","state"],"sourceRoot":""}