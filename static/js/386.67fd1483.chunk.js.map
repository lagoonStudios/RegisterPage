{"version":3,"file":"static/js/386.67fd1483.chunk.js","mappings":"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","sources":["components/atoms/Button/index.tsx","components/atoms/Div/index.tsx","components/atoms/H1/index.tsx","components/atoms/Input/Input.tsx","components/atoms/Main/index.tsx","constants/users.ts","components/molecules/Spinner/index.tsx","components/atoms/Span/index.tsx","components/templates/Login/Login.constants.ts","components/templates/Login/index.tsx","pages/Main/Main.types.ts","config/firebase.tsx","components/templates/Register/Register.functions.ts","components/templates/Register/Register.constants.ts","components/templates/Register/index.tsx","components/templates/Success/index.tsx","pages/Main/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { IButton } from './Button.types';\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @param {Function} onClick - custom function to the onClick Prop Button\n * @param {string | number | boolean | object} onClickValue - value to pass to the onClick function\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Button({\n  children,\n  customClassNames,\n  onClick,\n  onClickValue,\n  isDisabled,\n  type\n}: IButton): JSX.Element {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <button\n      type={type ?? 'button'}\n      className={classNames(customClassNames)}\n      onClick={() => onClick(onClickValue)}\n      disabled={isDisabled}>\n      {children}\n    </button>\n  );\n}\n","import classNames from 'classnames';\nimport { IDiv } from './Div.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Div({ children, customClassNames }: IDiv) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <div className={classNames(customClassNames)}>{children}</div>;\n}\n","import classNames from 'classnames';\nimport { IH1 } from './H1.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function ASide({ children, customClassNames }: IH1) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <h1 className={classNames(customClassNames)}>{children}</h1>;\n}\n","import classNames from 'classnames';\nimport { IInput } from './Input.types';\n\n/**\n * @param {string | undefined} src - string that uses to render image\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @param {string} alt - string display when image not load correctly or complete\n * @returns JSX/HTML Element\n */\nexport default function Input({\n  name,\n  customClassNames,\n  type,\n  onChange,\n  max,\n  min,\n  placeholder,\n  pattern\n}: IInput): JSX.Element {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <input\n      name={name}\n      type={type}\n      max={max}\n      min={min}\n      className={classNames(customClassNames)}\n      onChange={onChange}\n      placeholder={placeholder}\n      pattern={pattern}\n    />\n  );\n}\n","import classNames from 'classnames';\nimport { IMain } from './Main.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent t\n */\n\nexport default function Main({ children, customClassNames }: IMain) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <main className={classNames(customClassNames)}>{children}</main>;\n}\n","export const users = [\n    {\n        UserName: 'User01',\n        Password: 'smurdj'\n    },\n    {\n        UserName: 'User02',\n        Password: 'qfqwxt'\n    },\n    {\n        UserName: 'User03',\n        Password: 'ebamqx'\n    },\n    {\n        UserName: 'User04',\n        Password: 'ppyexj'\n    },\n    {\n        UserName: 'User05',\n        Password: 'hcstxd'\n    },\n    {\n        UserName: 'User06',\n        Password: 'fdrqwj'\n    },\n    {\n        UserName: 'User07',\n        Password: 'tdtxmq'\n    },\n    {\n        UserName: 'User08',\n        Password: 'mqnnyp'\n    },\n    {\n        UserName: 'User09',\n        Password: 'bdvjwe'\n    },\n    {\n        UserName: 'User10',\n        Password: 'ndkpwk'\n    },\n    {\n        UserName: 'User11',\n        Password: 'tyszbg'\n    },\n    {\n        UserName: 'User12',\n        Password: 'duurxy'\n    },\n    {\n        UserName: 'User13',\n        Password: 'wrabsb'\n    },\n    {\n        UserName: 'User14',\n        Password: 'afhfyr'\n    },\n    {\n        UserName: 'User15',\n        Password: 'fksbqv'\n    },\n]","export default function Spinner() {\n  return <>\n    <div role=\"status\" className=\"flex justify-center items-center\">\n      <svg aria-hidden=\"true\" className=\"mr-2 w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-white\" viewBox=\"0 0 100 101\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\" fill=\"currentColor\" />\n        <path d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\" fill=\"currentFill\" />\n      </svg>\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </>\n}","import classNames from 'classnames';\nimport { ISpan } from './Span.types';\n\n/**\n * @param {React.ReactDOM} children - Elements to render inside parent component\n * @param {Value | Mapping | Argument[]} customClassNames - Object with custom props for the classnames\n * @returns JSX/HTML Element wraps React Node Element that comes from the parent\n */\nexport default function Span({ children, customClassNames }: ISpan) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <span className={classNames(customClassNames)}>{children}</span>;\n}\n","const inputContainerClass = (IsError: boolean) => ({\n  \"flex flex-col w-full px-5 gap-5 justify-center items-center\": true,\n  \"gap-2\": IsError\n})\n\nconst inputClass = (IsError: boolean) => ({\n  \"w-full rounded-xl bg-gray-200 p-2 lg:p-5 text-lg\": true, \n  \"border border-red-600\": IsError\n})\n\n\nexport { inputContainerClass, inputClass }","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Button from \"../../atoms/Button\";\nimport Div from \"../../atoms/Div\";\nimport H1 from \"../../atoms/H1\";\nimport Input from \"../../atoms/Input/Input\";\nimport Main from \"../../atoms/Main\";\nimport { ILogin } from './Login.types';\nimport { users } from '../../../constants/users';\nimport { useState } from 'react';\nimport Spinner from '../../molecules/Spinner';\nimport Span from '../../atoms/Span';\nimport { inputClass, inputContainerClass } from './Login.constants';\n\nexport default function Login({ setState }: ILogin) {\n  // --- Hooks -----------------------------------------------------------------\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Este Campo es requerido'),\n    password: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Este Campo es requerido'),\n  })\n  const formik = useFormik({\n    initialValues: { username: '', password: '' },\n    onSubmit: (values) => {\n      setLoading(true);\n      let compare = users.find((v) => { return v.UserName === values.username && v.Password === values.password });\n      setTimeout(() => {\n        if (compare !== undefined)\n          setState(1)\n        setLoading(false)\n      }, 2500);\n    },\n    validationSchema,\n  });\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  const [loading, setLoading] = useState(false);\n  const IsError:boolean = Boolean(formik.errors.password) || Boolean(formik.errors.username);\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <>\n    <Main customClassNames=\"bg-desktop h-screen flex flex-1 justify-center items-center\">\n      <form onSubmit={formik.handleSubmit} className=\"bg-white w-4/5 lg:w-2/5 h-3/5 lg:h-4/5 lg:p-5 flex flex-col items-center gap-10 justify-center rounded-lg\">\n        <H1 customClassNames=\"text-3xl\">Inicio de Sesión</H1>\n        <Div customClassNames={inputContainerClass(IsError)}>\n          <Input\n            id='username'\n            name=\"username\"\n            type=\"text\"\n            value={formik.values.username}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            customClassNames={inputClass(IsError)}\n            placeholder=\"Usuario\"\n          />\n          {formik?.errors?.username && <Span customClassNames=\"text-red-600\">{formik?.errors?.username}</Span>}\n          <Input\n            id='password'\n            name=\"password\"\n            type=\"password\"\n            value={formik.values.password}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            customClassNames={inputClass(IsError)}\n            placeholder=\"Contraseña\"\n          />\n          {formik?.errors?.password && <Span customClassNames=\"text-red-600\">{formik?.errors?.password}</Span>}\n          <Button\n            onClick={() => { }}\n            onClickValue={true}\n            customClassNames=\"bg-medium-turquoise p-4 mt-3 w-full lg:w-96 rounded-full text-white text-lg\"\n            type='submit'\n            isDisabled={loading}\n          >\n            {loading ? <Spinner /> : 'Ingresar'}\n          </Button>\n        </Div>\n      </form>\n    </Main>\n  </>\n}","export enum EState {\n  Login = 0,\n  Register = 1,\n  Success = 2\n}","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDlszimD_kJl3gvig5Kp9-sA-Iq7vapQ6U\",\n  authDomain: \"ticketscann.firebaseapp.com\",\n  projectId: \"ticketscann\",\n  storageBucket: \"ticketscann.appspot.com\",\n  messagingSenderId: \"425710992126\",\n  appId: \"1:425710992126:web:476972027670f4bdeb43af\",\n  measurementId: \"G-LT0B306Y3B\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const firestore = getFirestore(app);\nexport const analytics = getAnalytics(app);","import emailjs from \"@emailjs/browser\";\n\nexport const sendEmail = (to_name: string, to_email: string, id: string) => {\n  const templateParams = {\n    to_name,\n    to_email,\n    qr:\n      \"https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=\" +\n      id,\n  };\n  console.log('template: ', templateParams);\n  // serviceId, templateId, templateParams, publicKey\n  emailjs\n    .send(\n      \"service_5cted8p\",\n      \"template_ri8cnoo\",\n      templateParams,\n      \"cgmGhlqI_1tJf45Y3\"\n      /* \"service_upkefmm\",\n      \"template_4ss2fi3\",\n      templateParams,\n      \"QjnxgCCvyTuw_xzgr\" */ \n    )\n    .then(\n      (res) => {\n        console.log(\"respuesta de emailJs: \", res);\n      },\n      (err) => {\n        console.log(\"error de emailJs: \", err);\n      }\n    );\n};","import { StylesConfig } from 'react-select';\nexport const customStyles: StylesConfig = {\n  control: (provided) => ({\n    ...provided,\n    padding: '0.2rem 0rem',\n    borderRadius: '0',\n    borderColor: 'black',\n    border: '0.5',\n  }),\n  indicatorsContainer: (provided) => ({\n    ...provided,\n    color: 'black',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    fontSize: '0.9rem',\n    color: 'black',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    fontSize: '0.9rem',\n    color: 'black',\n  }),\n  indicatorSeparator: (provided) => ({\n    ...provided,\n    display: 'none',\n  }),\n};\n\nexport const options = [\n  { value: 'juguete', label: 'Instrumento Musical o Juguetes' },\n  { value: 'ropa', label: 'Vestimenta' },\n  { value: 'medicina', label: 'Insumos Medicos' },\n  { value: 'alimentos', label: 'Alimentos No Perecederos' },  \n  { value: 'otro', label: 'Otro' }\n]\n\nexport const inputClass = (IsError: boolean) => (\n  {\"w-full border-b border-black\": true, \"border-red-600\": IsError}\n) ","import {\n  collection,\n  setDoc,\n  doc,\n  getDoc\n  /* query,\n  where,\n  onSnapshot, */\n} from \"firebase/firestore\";\nimport Select from 'react-select';\nimport toastNotify from 'react-hot-toast';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Button from \"../../atoms/Button\";\nimport Div from \"../../atoms/Div\";\nimport H1 from \"../../atoms/H1\";\nimport Input from \"../../atoms/Input/Input\";\nimport Main from \"../../atoms/Main\";\nimport Span from \"../../atoms/Span\";\nimport Spinner from \"../../molecules/Spinner\";\n\nimport { firestore } from \"../../../config/firebase\";\nimport { sendEmail } from \"./Register.functions\";\nimport { useState } from \"react\";\nimport { customStyles, inputClass, options } from \"./Register.constants\";\nimport { IRegister } from \"./Register.types\";\n\nexport default function Register({ setState }: IRegister) {\n  // --- Hooks -----------------------------------------------------------------\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Este Campo es requerido\"),\n    id: Yup.number().typeError('Ingresa un documento válido').min(0, 'Ingresa un documento válido').required(\"Este Campo es requerido\"),\n    email: Yup.string().email(\"Ingresa un correo válido\").required(\"Este Campo es requerido\"),\n  });\n  const formik = useFormik({\n    initialValues: { name: \"\", email: \"\", id: \"\" },\n    onSubmit: async (values) => {\n      setLoading(true);\n      getDoc(doc(firestore, 'Registers', values.id)).then(\n        async (res) => {\n        if(res.exists() === false){\n          await setDoc(doc(firestore, 'Registers', values.id), {\n            name: values.name,\n            email: values.email,\n            id: values.id,\n            donative: true,\n            donative_type: donative_type?.value,\n            attendance: false,\n          }).then(() => {\n            setState(2);\n            setLoading(false);\n            toastNotify.success('Datos registrado Exitosamente!');\n            sendEmail(values.name, values.email, values.id);\n          }).catch(() => {\n            setLoading(false);\n            toastNotify.error('Error Registrando Datos');\n          });\n          }else{\n            toastNotify.error('El usuario ya está registrado');\n            setLoading(false);\n          }\n      });\n\n      // await setDoc(doc(firestore, 'Registers', values.id), {\n      //   name: values.name,\n      //   email: values.email,\n      //   id: values.id,\n      //   donative: true,\n      //   donative_type: donative_type?.value,\n      //   attendance: false,\n      // }).then(() => {\n      //   setState(2);\n      //   setLoading(false);\n      //   toastNotify.success('Datos registrado Exitosamente!');\n      //   sendEmail(values.name, values.email, values.id);\n      // }).catch(() => {\n      //   setLoading(false);\n      //   toastNotify.error('Error Registrando Datos');\n      // });\n\n\n\n      /* const q = query(collection(firestore, \"Registers\"), where(\"id\", \"==\", values.id));\n      const unsubscribe = onSnapshot(\n        q,\n        async (querySnapshot) => {\n          if (querySnapshot.size === 0) {\n            await addDoc(collection(firestore, \"Registers\"), {\n              name: values.name,\n              email: values.email,\n              id: values.id,\n              donative: true,\n              donative_type: donative_type?.value,\n              attendance: false,\n            }).then(() => {\n              setState(2);\n              unsubscribe();\n              setLoading(false);\n              toastNotify.success('Datos registrado Exitosamente!');\n              sendEmail(values.name, values.email, values.id);\n            }).catch(() => {\n              setLoading(false);\n              toastNotify.error('Error Registrando Datos');\n            });\n          } else {\n            unsubscribe();\n            setLoading(false);\n            toastNotify.error('Este usuario ya fue registrado');\n          };\n        },\n        (err) => {\n          console.log(\"error: \", err);\n          toastNotify.error('Error Registrando Datos');\n        }\n      ); */\n    },\n    validationSchema,\n  });\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  const [donative_type, setDonative] = useState(options[0]);\n  const [loading, setLoading] = useState(false);\n  const IsError = \n    Boolean(formik.errors.name) || \n    Boolean(formik.errors.email) || \n    Boolean(formik.errors.id);\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  const handler = (e: any) => setDonative(e);\n  // --- END: Data and handlers ------------------------------------------------\n  return (\n    <>\n      <Main customClassNames=\"bg-desktop h-screen flex flex-1 justify-center items-center\">\n        <form\n          onSubmit={formik.handleSubmit}\n          className=\"bg-white w-4/5 lg:w-2/5 h-5/6 p-5 flex flex-col justify-center items-center gap-5 rounded-lg\"\n        >\n          <H1 customClassNames=\"text-2xl font-bold mt-5\">Formato de Registro</H1>\n          <Div customClassNames=\"flex flex-col flex-1 w-full px-5 gap-5 justify-center\">\n            <Span>Nombre</Span>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              value={formik.values.name}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              customClassNames={inputClass(IsError)}\n            />\n            {formik.errors.name && <Span customClassNames=\"text-red-600\">{formik.errors.name}</Span>}\n            <Span>Correo Electronico</Span>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              value={formik.values.email}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              customClassNames={inputClass(IsError)}\n            />\n            {formik.errors.name && <Span customClassNames=\"text-red-600\">{formik.errors.email}</Span>}\n            <Span>Documento de Identidad</Span>\n            <Div customClassNames=\"flex flex-row gap-2\">\n              <Span>V-</Span>\n              <Input\n                id=\"id\"\n                name=\"id\"\n                type=\"text\"\n                pattern=\"\\d*\"\n                value={formik.values.id}\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                customClassNames={inputClass(IsError)}\n              />\n            </Div>\n            {formik.errors.name && <Span customClassNames=\"text-red-600\">{formik.errors.id}</Span>}\n            <Span>Tipo de Donativo</Span>\n            <Select\n              options={options}\n              styles={customStyles}\n              onChange={(e) => handler(e)}\n              defaultValue={options[0]}\n            />\n          </Div>\n          <Button\n            onClick={() => { }}\n            onClickValue={true}\n            customClassNames=\"bg-medium-turquoise p-4 w-full lg:w-96 rounded-full text-white text-lg\"\n            type=\"submit\"\n            isDisabled={loading}\n          >\n            {loading ? <Spinner /> : 'Registrar'}\n          </Button>\n        </form>\n      </Main>\n    </>\n  );\n}\n","import Button from \"../../atoms/Button\";\nimport Div from \"../../atoms/Div\";\nimport H1 from \"../../atoms/H1\";\nimport Main from \"../../atoms/Main\";\nimport { ISuccess } from './Success.types';\n\nexport default function Login({ setState }: ISuccess) {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------\n  // --- END: Data and handlers ------------------------------------------------\n  return <>\n    <Main customClassNames=\"bg-desktop h-screen flex flex-1 justify-center items-center\">\n      <Div customClassNames=\"bg-white w-4/5 lg:w-2/5 h-3/5 lg:h-4/5 lg:p-5 flex flex-col items-center gap-10 justify-center rounded-lg\">\n        <H1 customClassNames=\"text-3xl\">Datos Registrados Exitosamente</H1>\n        <Div customClassNames=\"flex flex-col w-full px-5 gap-10 justify-center items-center\">\n          <Button\n            onClick={() => setState(1)}\n            onClickValue={true}\n            customClassNames=\"bg-medium-turquoise p-4 w-full lg:w-96 rounded-full text-white text-lg\"\n            type='submit'\n          >\n            Volver al Formulario\n          </Button>\n        </Div>\n      </Div>\n    </Main>\n  </>\n}","import { useState } from 'react';\nimport Login from '../../components/templates/Login';\nimport Register from '../../components/templates/Register';\nimport Success from '../../components/templates/Success';\nimport { EState } from './Main.types';\n\nexport default function Main() {\n  // --- Hooks -----------------------------------------------------------------\n  // --- END: Hooks ------------------------------------------------------------\n\n  // --- Local state -----------------------------------------------------------\n  const [state, setState] = useState(EState.Login);\n\n  const COMPONENTS = {\n    0: <Login setState={setState} />,\n    1: <Register setState={setState} />,\n    2: <Success setState={setState} />\n  }\n  // --- END: Local state ------------------------------------------------------\n\n  // --- Refs ------------------------------------------------------------------\n  // --- END: Refs -------------------------------------------------------------\n\n  // --- Redux -----------------------------------------------------------------\n  // --- END: Redux ------------------------------------------------------------\n\n  // --- Side effects ----------------------------------------------------------\n  // --- END: Side effects -----------------------------------------------------\n\n  // --- Data and handlers -----------------------------------------------------  \n  // --- END: Data and handlers ------------------------------------------------\n  return <>\n    {COMPONENTS[state]}\n  </>\n}"],"names":["Button","children","customClassNames","onClick","onClickValue","isDisabled","type","className","classNames","disabled","Div","ASide","Input","name","onChange","max","min","placeholder","pattern","Main","users","UserName","Password","Spinner","role","viewBox","fill","xmlns","d","Span","inputContainerClass","IsError","inputClass","Login","setState","validationSchema","Yup","shape","username","required","password","formik","useFormik","initialValues","onSubmit","values","setLoading","compare","find","v","setTimeout","undefined","useState","loading","Boolean","errors","handleSubmit","id","value","onBlur","handleBlur","handleChange","EState","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","getAnalytics","sendEmail","to_name","to_email","templateParams","qr","console","log","emailjs","then","res","err","customStyles","control","provided","padding","borderRadius","borderColor","border","indicatorsContainer","color","fontSize","singleValue","indicatorSeparator","display","options","label","Register","typeError","email","getDoc","doc","exists","setDoc","donative","donative_type","attendance","toastNotify","catch","setDonative","styles","e","handler","defaultValue","state","COMPONENTS"],"sourceRoot":""}